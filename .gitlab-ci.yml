stages:
  - build
  - tests
  - publish_images

variables:
  POSTGRES_CONTAINER_VERSION: "0.2"

#-----------------------------------------
build_image_pg10:
  stage: build
  tags:
    - shell
  variables:
    BUILD_OPTS: "--force-rm --no-cache"
  script:
    - cp -a container 10/
    - docker build ${BUILD_OPTS} --force-rm -t article714/postgresql:10.${POSTGRES_CONTAINER_VERSION} --build-arg POSTGRES_CONTAINER_VERSION=10.${POSTGRES_CONTAINER_VERSION} 10

#-----------------------------------------
build_image_pg11:
  stage: build
  tags:
    - shell
  variables:
    BUILD_OPTS: "--force-rm --no-cache"
  script:
    - cp -a container 11/
    - docker build ${BUILD_OPTS} --force-rm -t article714/postgresql:11.${POSTGRES_CONTAINER_VERSION} --build-arg POSTGRES_CONTAINER_VERSION=11.${POSTGRES_CONTAINER_VERSION} 11

#------------------------------------------
# QCheck (TODO)

#------------------------------------------
# Tests

test_image_pg10:
  stage: tests
  image:
    name: article714/postgresql:10.${POSTGRES_CONTAINER_VERSION}
  services:
    - name: article714/postgresql:10.${POSTGRES_CONTAINER_VERSION}
      alias: pg-srv
  tags:
    - docker
  script:
    # wait for bindns to be fully fit
    - echo "TODO"

test_image_pg11:
  stage: tests
  image:
    name: article714/postgresql:11.${POSTGRES_CONTAINER_VERSION}
  services:
    - name: article714/postgresql:11.${POSTGRES_CONTAINER_VERSION}
      alias: pg-srv
  tags:
    - docker
  script:
    # wait for bindns to be fully fit
    - echo "TODO"

#---------------------------------------------
# publish

publish_image_pg11:
  stage: publish_images
  tags:
    - shell
  script:
    - docker push article714/postgresql:11.${POSTGRES_CONTAINER_VERSION}
